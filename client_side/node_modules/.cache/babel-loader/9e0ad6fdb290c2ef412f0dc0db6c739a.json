{"ast":null,"code":"var _jsxFileName = \"/Users/cyrus/Documents/Code/01. Code/debord_slow_sender_meme/client_side/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Stitch, AnonymousCredential, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.retrieveDataFromDBOnLoad = () => {\n      this.client.auth.loginWithCredential(new AnonymousCredential()).then(this.retrieveDataFromDB).catch(console.error);\n    };\n\n    this.retrieveDataFromDB = () => {\n      this.db.collection(\"meme_entries\").find().asArray().then(dbContent => {\n        this.setState({\n          dbContent\n        });\n      });\n    };\n\n    this.displayMeme = () => {\n      const dbContent = this.state.dbContent;\n\n      if (!dbContent) {\n        return null;\n      }\n\n      console.log(this.state.dbContent, \"----\");\n      let generateMemesFromDb = this.state.dbContent.map((ele, index) => {\n        return ele;\n      });\n    };\n\n    this.state = {\n      dbContent: null\n    };\n  }\n\n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient(\"debord_slow_sender-eabsu\");\n    const mongodb = this.client.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n    this.db = mongodb.db(\"debord_slow_sender\");\n    this.retrieveDataFromDBOnLoad();\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, this.displayMeme());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cyrus/Documents/Code/01. Code/debord_slow_sender_meme/client_side/src/App.js"],"names":["React","Component","axios","Stitch","AnonymousCredential","RemoteMongoClient","App","constructor","retrieveDataFromDBOnLoad","client","auth","loginWithCredential","then","retrieveDataFromDB","catch","console","error","db","collection","find","asArray","dbContent","setState","displayMeme","state","log","generateMemesFromDb","map","ele","index","componentDidMount","initializeDefaultAppClient","mongodb","getServiceClient","factory","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SACEC,MADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,4BAJP;;AAQA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAiBbC,wBAjBa,GAiBc,MAAM;AAC/B,WAAKC,MAAL,CAAYC,IAAZ,CACGC,mBADH,CACuB,IAAIP,mBAAJ,EADvB,EAEGQ,IAFH,CAEQ,KAAKC,kBAFb,EAGGC,KAHH,CAGSC,OAAO,CAACC,KAHjB;AAID,KAtBY;;AAAA,SAwBbH,kBAxBa,GAwBQ,MAAM;AACxB,WAAKI,EAAL,CACGC,UADH,CACc,cADd,EAEGC,IAFH,GAGGC,OAHH,GAIGR,IAJH,CAIQS,SAAS,IAAI;AACjB,aAAKC,QAAL,CAAc;AAACD,UAAAA;AAAD,SAAd;AACD,OANH;AAOA,KAhCU;;AAAA,SAkCbE,WAlCa,GAkCC,MAAM;AAClB,YAAMF,SAAS,GAAG,KAAKG,KAAL,CAAWH,SAA7B;;AACA,UAAG,CAACA,SAAJ,EAAc;AACZ,eAAO,IAAP;AACD;;AACDN,MAAAA,OAAO,CAACU,GAAR,CAAY,KAAKD,KAAL,CAAWH,SAAvB,EAAkC,MAAlC;AACA,UAAIK,mBAAmB,GAAG,KAAKF,KAAL,CAAWH,SAAX,CACzBM,GADyB,CACrB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnB,eAAOD,GAAP;AACD,OAHyB,CAA1B;AAID,KA5CY;;AAEX,SAAKJ,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDS,EAAAA,iBAAiB,GAAE;AACjB,SAAKrB,MAAL,GAAcN,MAAM,CAAC4B,0BAAP,CAAkC,0BAAlC,CAAd;AACA,UAAMC,OAAO,GAAG,KAAKvB,MAAL,CAAYwB,gBAAZ,CACd5B,iBAAiB,CAAC6B,OADJ,EAEd,eAFc,CAAhB;AAIA,SAAKjB,EAAL,GAAUe,OAAO,CAACf,EAAR,CAAW,oBAAX,CAAV;AACA,SAAKT,wBAAL;AACD;;AAgCD2B,EAAAA,MAAM,GAAG;AACPpB,IAAAA,OAAO,CAACU,GAAR,CAAY,KAAKD,KAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,WAAL,EADH,CADF;AAKD;;AAvDyB;;AAyD5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      dbContent: null\n    };\n  }\n\n  componentDidMount(){\n    this.client = Stitch.initializeDefaultAppClient(\"debord_slow_sender-eabsu\");\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"debord_slow_sender\");\n    this.retrieveDataFromDBOnLoad()\n  }\n\n  retrieveDataFromDBOnLoad = () => {\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(this.retrieveDataFromDB)\n      .catch(console.error);\n  };\n\n  retrieveDataFromDB = () => {\n     this.db\n       .collection(\"meme_entries\")\n       .find()\n       .asArray()\n       .then(dbContent => {\n         this.setState({dbContent});\n       });\n    }\n\n  displayMeme = () => {\n    const dbContent = this.state.dbContent;\n    if(!dbContent){\n      return null;\n    }\n    console.log(this.state.dbContent, \"----\");\n    let generateMemesFromDb = this.state.dbContent\n    .map((ele, index) => {\n      return ele;\n    })\n  }\n\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        {this.displayMeme()}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}